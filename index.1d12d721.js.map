{"mappings":"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","sources":["<anon>","src/index.ts","src/configuration-component.ts","src/preferred-theme.ts"],"sourcesContent":["const $34b668c5ec79c688$export$62cdbe59b53bcfdb = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'github-dark' : 'github-light';\nconst $34b668c5ec79c688$export$fc9ac0b85d208db2 = 'preferred-color-scheme';\n\n\nclass $765a25cf45cd8ead$export$954adec627b30475 {\n    constructor(){\n        this.element = document.createElement('form');\n        this.element.innerHTML = `\n      <h3 id=\"heading-repository\">Repository</h3>\n      <p>\n        Choose the repository utterances will connect to.\n      </p>\n      <ol>\n        <li>Make sure the repo is public, otherwise your readers will not be able to view the issues/comments.</li>\n        <li>Make sure the <a href=\"https://github.com/apps/utterances\">utterances app</a>\n          is installed on the repo, otherwise users will not be able to post comments.\n        </li>\n        <li>If your repo is a fork, navigate to its <em>settings</em> tab and confirm\n          the <em>issues</em> feature is turned on. </li>\n      </ol>\n      <fieldset>\n        <div>\n          <label for=\"repo\">repo:</label><br/>\n          <input id=\"repo\" class=\"form-control\" type=\"text\" placeholder=\"owner/repo\">\n          <p class=\"note\">\n            A <strong>public</strong> GitHub repository. This is where the blog\n            post issues and issue-comments will be posted.\n          </p>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-mapping\">Blog Post \\u{2194}\\u{FE0F} Issue Mapping</h3>\n      <p>Choose the mapping between blog posts and GitHub issues.</p>\n      <fieldset>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"pathname\" name=\"mapping\" checked=\"checked\">\n            Issue title contains page pathname\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's pathname\n              URL component. If a matching issue is not found, Utterances will automatically\n              create one the first time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"url\" name=\"mapping\">\n            Issue title contains page URL\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's URL.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"title\" name=\"mapping\">\n            Issue title contains page title\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's title.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"og:title\" name=\"mapping\">\n            Issue title contains page og:title\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the page's\n              <a href=\"http://ogp.me/\">Open Graph</a> title meta.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"issue-number\" name=\"mapping\">\n            Specific issue number\n            <p class=\"note\">\n              You configure Utterances to load a specific issue by number. Issues are not automatically\n              created.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"specific-term\" name=\"mapping\">\n            Issue title contains specific term\n            <p class=\"note\">\n              You configure Utterances to search for an issue whose title contains a specific term of your choosing.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post. The issue's title will be the term you chose.\n            </p>\n          </label>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-issue-label\">Issue Label</h3>\n      <p>\n        Choose the label that will be assigned to issues created by Utterances.\n      </p>\n      <fieldset>\n        <div>\n          <label for=\"label\">label (optional):</label><br/>\n          <input id=\"label\" class=\"form-control\" type=\"text\" placeholder=\"Comment\">\n          <p class=\"note\">\n            Label names are case sensitive.\n            The label must exist in your repo-\n            Utterances cannot attach labels that do not exist.\n            Emoji are supported in label names.\\u{2728}\\u{1F4AC}\\u{2728}\n          </p>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-theme\">Theme</h3>\n      <p>\n        Choose an Utterances theme that matches your blog.\n        Can't find a theme you like?\n        <a href=\"https://github.com/utterance/utterances/blob/master/CONTRIBUTING.md\">Contribute</a> a custom theme.\n      </p>\n\n      <select id=\"theme\" class=\"form-select\" value=\"github-light\" aria-label=\"Theme\">\n        <option value=\"github-light\">GitHub Light</option>\n        <option value=\"github-dark\">GitHub Dark</option>\n        <option value=\"preferred-color-scheme\">Preferred Color Scheme</option>\n        <option value=\"github-dark-orange\">GitHub Dark Orange</option>\n        <option value=\"icy-dark\">Icy Dark</option>\n        <option value=\"dark-blue\">Dark Blue</option>\n        <option value=\"photon-dark\">Photon Dark</option>\n        <option value=\"boxy-light\">Boxy Light</option>\n        <option value=\"gruvbox-dark\">Gruvbox Dark</option>\n      </select>\n\n      <h3 id=\"heading-enable\">Enable Utterances</h3>\n\n      <p>Add the following script tag to your blog's template. Position it where you want the\n      comments to appear. Customize the layout using the <code>.utterances</code> and\n      <code>.utterances-frame</code> selectors.\n      </p>\n      <div class=\"config-field\" id=\"script\" class=\"highlight highlight-text-html-basic\"></div>\n      <button id=\"copy-button\" type=\"button\" class=\"btn btn-blue code-action\">Copy</button>\n      <br/>\n      <br/>`;\n        this.element.addEventListener('submit', (event)=>event.preventDefault());\n        this.element.action = 'javascript:';\n        this.script = this.element.querySelector('#script');\n        this.repo = this.element.querySelector('#repo');\n        this.label = this.element.querySelector('#label');\n        this.theme = this.element.querySelector('#theme');\n        const themeStylesheet = document.getElementById('theme-stylesheet');\n        this.theme.addEventListener('change', ()=>{\n            let theme = this.theme.value;\n            if (theme === (0, $34b668c5ec79c688$export$fc9ac0b85d208db2)) theme = (0, $34b668c5ec79c688$export$62cdbe59b53bcfdb);\n            themeStylesheet.href = `/stylesheets/themes/${theme}/index.css`;\n            const message = {\n                type: 'set-theme',\n                theme: theme\n            };\n            const utterances = document.querySelector('iframe');\n            utterances.contentWindow.postMessage(message, location.origin);\n        });\n        const copyButton = this.element.querySelector('#copy-button');\n        copyButton.addEventListener('click', ()=>this.copyTextToClipboard(this.script.textContent));\n        this.element.addEventListener('change', ()=>this.outputConfig());\n        this.element.addEventListener('input', ()=>this.outputConfig());\n        this.outputConfig();\n    }\n    outputConfig() {\n        const mapping = this.element.querySelector('input[name=\"mapping\"]:checked');\n        let mappingAttr;\n        if (mapping.value === 'issue-number') mappingAttr = this.makeConfigScriptAttribute('issue-number', '[ENTER ISSUE NUMBER HERE]');\n        else if (mapping.value === 'specific-term') mappingAttr = this.makeConfigScriptAttribute('issue-term', '[ENTER TERM HERE]');\n        else mappingAttr = this.makeConfigScriptAttribute('issue-term', mapping.value);\n        this.script.innerHTML = this.makeConfigScript(this.makeConfigScriptAttribute('repo', this.repo.value === '' ? '[ENTER REPO HERE]' : this.repo.value) + '\\n' + mappingAttr + '\\n' + (this.label.value ? this.makeConfigScriptAttribute('label', this.label.value) + '\\n' : '') + this.makeConfigScriptAttribute('theme', this.theme.value) + '\\n' + this.makeConfigScriptAttribute('crossorigin', 'anonymous'));\n    }\n    makeConfigScriptAttribute(name, value) {\n        return `<span class=\"pl-s1\">        <span class=\"pl-e\">${name}</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>${value}<span class=\"pl-pds\">\"</span></span></span>`;\n    }\n    makeConfigScript(attrs) {\n        return `<pre><span class=\"pl-s1\">&lt;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://utteranc.es/client.js<span class=\"pl-pds\">\"</span></span></span>\\n${attrs}\\n<span class=\"pl-s1\">        <span class=\"pl-e\">async</span>&gt;</span>\\n<span class=\"pl-s1\">&lt;/<span class=\"pl-ent\">script</span>&gt;</span></pre>`;\n    }\n    copyTextToClipboard(text) {\n        const textArea = document.createElement('textarea');\n        textArea.style.cssText = `position:fixed;top:0;left:0;width:2em;height:2em;padding:0;border:none;outline:none;box-shadow:none;background:transparent`;\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.select();\n        try {\n            document.execCommand('copy');\n        } catch (err) {}\n        document.body.removeChild(textArea);\n    }\n}\n\n\ndocument.querySelector('h2#configuration').insertAdjacentElement('afterend', new (0, $765a25cf45cd8ead$export$954adec627b30475)().element);\n\n\n//# sourceMappingURL=index.1d12d721.js.map\n","import { ConfigurationComponent } from './configuration-component';\n\ndocument.querySelector('h2#configuration')!\n  .insertAdjacentElement('afterend', new ConfigurationComponent().element);\n","import { preferredThemeId, preferredTheme } from './preferred-theme';\n\nexport class ConfigurationComponent {\n  public readonly element: HTMLFormElement;\n  private readonly script: HTMLDivElement;\n  private readonly repo: HTMLInputElement;\n  private readonly label: HTMLInputElement;\n  private readonly theme: HTMLSelectElement;\n\n  constructor() {\n    this.element = document.createElement('form');\n    this.element.innerHTML = `\n      <h3 id=\"heading-repository\">Repository</h3>\n      <p>\n        Choose the repository utterances will connect to.\n      </p>\n      <ol>\n        <li>Make sure the repo is public, otherwise your readers will not be able to view the issues/comments.</li>\n        <li>Make sure the <a href=\"https://github.com/apps/utterances\">utterances app</a>\n          is installed on the repo, otherwise users will not be able to post comments.\n        </li>\n        <li>If your repo is a fork, navigate to its <em>settings</em> tab and confirm\n          the <em>issues</em> feature is turned on. </li>\n      </ol>\n      <fieldset>\n        <div>\n          <label for=\"repo\">repo:</label><br/>\n          <input id=\"repo\" class=\"form-control\" type=\"text\" placeholder=\"owner/repo\">\n          <p class=\"note\">\n            A <strong>public</strong> GitHub repository. This is where the blog\n            post issues and issue-comments will be posted.\n          </p>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-mapping\">Blog Post ↔️ Issue Mapping</h3>\n      <p>Choose the mapping between blog posts and GitHub issues.</p>\n      <fieldset>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"pathname\" name=\"mapping\" checked=\"checked\">\n            Issue title contains page pathname\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's pathname\n              URL component. If a matching issue is not found, Utterances will automatically\n              create one the first time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"url\" name=\"mapping\">\n            Issue title contains page URL\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's URL.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"title\" name=\"mapping\">\n            Issue title contains page title\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the blog post's title.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"og:title\" name=\"mapping\">\n            Issue title contains page og:title\n            <p class=\"note\">\n              Utterances will search for an issue whose title contains the page's\n              <a href=\"http://ogp.me/\">Open Graph</a> title meta.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"issue-number\" name=\"mapping\">\n            Specific issue number\n            <p class=\"note\">\n              You configure Utterances to load a specific issue by number. Issues are not automatically\n              created.\n            </p>\n          </label>\n        </div>\n        <div class=\"form-checkbox\">\n          <label>\n            <input type=\"radio\" value=\"specific-term\" name=\"mapping\">\n            Issue title contains specific term\n            <p class=\"note\">\n              You configure Utterances to search for an issue whose title contains a specific term of your choosing.\n              If a matching issue is not found, Utterances will automatically create one the first\n              time someone comments on your post. The issue's title will be the term you chose.\n            </p>\n          </label>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-issue-label\">Issue Label</h3>\n      <p>\n        Choose the label that will be assigned to issues created by Utterances.\n      </p>\n      <fieldset>\n        <div>\n          <label for=\"label\">label (optional):</label><br/>\n          <input id=\"label\" class=\"form-control\" type=\"text\" placeholder=\"Comment\">\n          <p class=\"note\">\n            Label names are case sensitive.\n            The label must exist in your repo-\n            Utterances cannot attach labels that do not exist.\n            Emoji are supported in label names.✨💬✨\n          </p>\n        </div>\n      </fieldset>\n\n      <h3 id=\"heading-theme\">Theme</h3>\n      <p>\n        Choose an Utterances theme that matches your blog.\n        Can't find a theme you like?\n        <a href=\"https://github.com/utterance/utterances/blob/master/CONTRIBUTING.md\">Contribute</a> a custom theme.\n      </p>\n\n      <select id=\"theme\" class=\"form-select\" value=\"github-light\" aria-label=\"Theme\">\n        <option value=\"github-light\">GitHub Light</option>\n        <option value=\"github-dark\">GitHub Dark</option>\n        <option value=\"preferred-color-scheme\">Preferred Color Scheme</option>\n        <option value=\"github-dark-orange\">GitHub Dark Orange</option>\n        <option value=\"icy-dark\">Icy Dark</option>\n        <option value=\"dark-blue\">Dark Blue</option>\n        <option value=\"photon-dark\">Photon Dark</option>\n        <option value=\"boxy-light\">Boxy Light</option>\n        <option value=\"gruvbox-dark\">Gruvbox Dark</option>\n      </select>\n\n      <h3 id=\"heading-enable\">Enable Utterances</h3>\n\n      <p>Add the following script tag to your blog's template. Position it where you want the\n      comments to appear. Customize the layout using the <code>.utterances</code> and\n      <code>.utterances-frame</code> selectors.\n      </p>\n      <div class=\"config-field\" id=\"script\" class=\"highlight highlight-text-html-basic\"></div>\n      <button id=\"copy-button\" type=\"button\" class=\"btn btn-blue code-action\">Copy</button>\n      <br/>\n      <br/>`;\n\n    this.element.addEventListener('submit', event => event.preventDefault());\n    this.element.action = 'javascript:';\n\n    this.script = this.element.querySelector('#script') as HTMLDivElement;\n\n    this.repo = this.element.querySelector('#repo') as HTMLInputElement;\n\n    this.label = this.element.querySelector('#label') as HTMLInputElement;\n\n    this.theme = this.element.querySelector('#theme') as HTMLSelectElement;\n\n    const themeStylesheet = document.getElementById('theme-stylesheet') as HTMLLinkElement;\n    this.theme.addEventListener('change', () => {\n      let theme = this.theme.value;\n      if (theme === preferredThemeId) {\n        theme = preferredTheme\n      }\n      themeStylesheet.href = `/stylesheets/themes/${theme}/index.css`;\n      const message = {\n        type: 'set-theme',\n        theme\n      };\n      const utterances = document.querySelector('iframe')!;\n      utterances.contentWindow!.postMessage(message, location.origin);\n    });\n\n    const copyButton = this.element.querySelector('#copy-button') as HTMLButtonElement;\n    copyButton.addEventListener(\n      'click',\n      () => this.copyTextToClipboard(this.script.textContent as string));\n\n    this.element.addEventListener('change', () => this.outputConfig());\n    this.element.addEventListener('input', () => this.outputConfig());\n    this.outputConfig();\n  }\n\n  private outputConfig() {\n    const mapping = this.element.querySelector('input[name=\"mapping\"]:checked') as HTMLInputElement;\n    let mappingAttr: string;\n    // tslint:disable-next-line:prefer-conditional-expression\n    if (mapping.value === 'issue-number') {\n      mappingAttr = this.makeConfigScriptAttribute('issue-number', '[ENTER ISSUE NUMBER HERE]');\n    } else if (mapping.value === 'specific-term') {\n      mappingAttr = this.makeConfigScriptAttribute('issue-term', '[ENTER TERM HERE]');\n    } else {\n      mappingAttr = this.makeConfigScriptAttribute('issue-term', mapping.value);\n    }\n    this.script.innerHTML = this.makeConfigScript(\n      this.makeConfigScriptAttribute('repo', this.repo.value === '' ? '[ENTER REPO HERE]' : this.repo.value) + '\\n' +\n      mappingAttr + '\\n' +\n      (this.label.value ? this.makeConfigScriptAttribute('label', this.label.value) + '\\n' : '') +\n      this.makeConfigScriptAttribute('theme', this.theme.value) + '\\n' +\n      this.makeConfigScriptAttribute('crossorigin', 'anonymous'));\n  }\n\n  private makeConfigScriptAttribute(name: string, value: string) {\n    // tslint:disable-next-line:max-line-length\n    return `<span class=\"pl-s1\">        <span class=\"pl-e\">${name}</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>${value}<span class=\"pl-pds\">\"</span></span></span>`;\n  }\n\n  private makeConfigScript(attrs: string) {\n    // tslint:disable-next-line:max-line-length\n    return `<pre><span class=\"pl-s1\">&lt;<span class=\"pl-ent\">script</span> <span class=\"pl-e\">src</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://utteranc.es/client.js<span class=\"pl-pds\">\"</span></span></span>\\n${attrs}\\n<span class=\"pl-s1\">        <span class=\"pl-e\">async</span>&gt;</span>\\n<span class=\"pl-s1\">&lt;/<span class=\"pl-ent\">script</span>&gt;</span></pre>`;\n  }\n\n  private copyTextToClipboard(text: string) {\n    const textArea = document.createElement('textarea');\n    // tslint:disable-next-line:max-line-length\n    textArea.style.cssText = `position:fixed;top:0;left:0;width:2em;height:2em;padding:0;border:none;outline:none;box-shadow:none;background:transparent`;\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    try {\n      document.execCommand('copy');\n      // tslint:disable-next-line:no-empty\n    } catch (err) { }\n    document.body.removeChild(textArea);\n  }\n}\n","export const preferredTheme = window.matchMedia('(prefers-color-scheme: dark)').matches\n  ? 'github-dark'\n  : 'github-light';\n\nexport const preferredThemeId = 'preferred-color-scheme';"],"names":["$34b668c5ec79c688$export$62cdbe59b53bcfdb","window","matchMedia","matches","document","querySelector","insertAdjacentElement","constructor","element","createElement","innerHTML","addEventListener","event","preventDefault","action","script","repo","label","theme","themeStylesheet","getElementById","value","href","message","type","utterances","contentWindow","postMessage","location","origin","copyButton","copyTextToClipboard","textContent","outputConfig","mappingAttr","mapping","makeConfigScriptAttribute","makeConfigScript","name","attrs","text","textArea","style","cssText","body","appendChild","select","execCommand","err","removeChild"],"version":3,"file":"index.1d12d721.js.map"}